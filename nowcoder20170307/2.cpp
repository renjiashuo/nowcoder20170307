#include <iostream>

using namespace std;

//////////////////////////////////////////////////////////////////////////
//链接：https://www.nowcoder.com/questionTerminal/46eb436eb6564a62b9f972160e1699c9
//来源：牛客网
//
//给出一个正整数N和长度L，找出一段长度大于等于L的连续非负整数，他们的和恰好为N。答案可能有多个，我我们需要找出长度最小的那个。
//例如 N = 18  L = 2：
//5 + 6 + 7 = 18
//3 + 4 + 5 + 6 = 18
//都是满足要求的，但是我们输出更短的 5 6 7
//
//输入描述:
//输入数据包括一行：
//两个正整数N(1 ≤ N ≤ 1000000000), L(2 ≤ L ≤ 100)
//
//
//输出描述 :
//	 从小到大输出这段连续非负整数，以空格分隔，行末无空格。如果没有这样的序列或者找出的序列长度大于100，则输出No
//
//
//输入例子:
//18 2
//
//
//输出例子 :
//	 5 6 7
//////////////////////////////////////////////////////////////////////////

int main()
{
	int L;
	long N;
	cin >> N >> L;
	if (N < 1)
	{
		cout << "No";
		return 0;
	}
	if (L < 2)
		L = 2;
	if (L == 2)
	{
		if (N % 2 == 1)
		{
			cout << N / 2 << " " << N / 2 + 1;
			return 0;
		}
		L++;
	}
	for (;L <= 100;L++)
	{
		if (L % 2 == 1)
		{
			if (N % L == 0 && N / L - L / 2 >= 0)
			{
				long M = N / L;
				for (int i = M - L / 2; i <= M + L / 2; i++)
				{
					cout << i;
					if (i != M + L / 2)
						cout << " ";
				}
				return 0;
			}
		}
		else
		{
			if (N % (L / 2) == 0 && (N / (L / 2)) % 2 == 1 && (N / (L / 2)) / 2 - L / 2 + 1 >= 0)
			{
				long M = (N / (L / 2));
				for (int i = M / 2 - L / 2 + 1; i <= M / 2 + L / 2; i++)
				{
					cout << i;
					if (i != M / 2 + L / 2)
						cout << " ";
				}
				return 0;
			}
		}
	}

	cout << "No";
	return 0;
}